global proc MentalrayBaking(){	int $flag=`window -ex MentalRayBaking `;	if($flag==1)	{		close();		GUI();	}	else	{		GUI();	}	}global proc close(){	deleteUI -window MentalRayBaking;}global proc Baking(){	writemel();	confirmDialog -title "Job Submission Result" -message "Job submitted successfully!" -button "OK";	close();}	global proc int writemel()	{				string $objects[]=`ls -sl`	;		string $camname=`optionMenuGrp -q -v menucam`;		string $projectPath=`workspace -q -fn`;		string $object=$objects[0];		for ($object in $objects)			{								string $buffer[];				$numTokens = `tokenize $object ":" $buffer`;				$numTokens = `tokenize $object "|" $buffer`;				$object=$buffer[0];				string $MelFilename =$projectPath+"/"+$object+".mel";				string $cmdFilename ="c:\\temp\\"+$object+".txt";				string $cmd="\""+"c:\\Program Files\\Autodesk\\Maya2008\\bin\\mayabatch.exe"+"\" "+ " -file " +"\""+ `file -q -sceneName`+"\""+" -script "+$MelFilename;					$fileId = `fopen $MelFilename "w"`;						fprint $fileId ( "setProject "+$projectPath+"\n" );						fprint $fileId ( "select "+$object+";"+"\n" );						fprint $fileId ( "convertLightmapSetup  -camera "+ $camname +"-bakeSetOverride tmpTextureBakeSet -showcpv;"+"\n");						fprint $fileId ( "file -save"+"\n" );					fclose $fileId;				$fileId = `fopen $cmdFilename "w"`;					if( $fileId == 0 )					{						error( "Error in CommandsFile Submission Script: could not create " + $cmdFilename + "\n" );							}						fprint $fileId($cmd+"\n");								fclose $fileId;		int $wjf=writeJobfile($object);		int $wjff=writejobinfofile($object);		print($wjf+"\n");			print($wjff+"\n");			string $jobcmmd="deadlinecommandbg c:\\temp\\"+$object+".job"+"  c:\\temp\\"+$object+"_info.job"+ " "+  $cmdFilename;		system($jobcmmd);		print ($jobcmmd+"\n");			}		return 1;		}global proc string Username()	{		string $result = system ("echo %USERNAME%"); 		return $result;	}	global proc int writeJobfile(string $objectname)	{		// Create the job info file.		string $submitFilename ="c:/temp/"+$objectname+".job";		$fileId = `fopen $submitFilename "w"`;		if( $fileId == 0 )		{			error( "Error in Deadline Submission Script: could not create " + $submitFilename + "\n" );			return 0;		}		 	fprint $fileId ( "Plugin=CommandScript \n" );		fprint $fileId ( "Name=Mental Ray Baking"+"\n" );		fprint $fileId ( "Comment=" +"posted by "+Username()+ "\n" );		fprint $fileId ("Department= \n");		fprint $fileId ( "Pool=" + "blades" + "\n" );		fprint $fileId ("Group=none \n");		fprint $fileId ( "Priority=" + 50 + "\n" );		fprint $fileId ("TaskTimeoutMinutes=0 \n");		fprint $fileId ("EnableAutoTimeout=False \n");		fprint $fileId ("ConcurrentTasks=1 \n");		fprint $fileId ("LimitConcurrentTasksToNumberOfCpus=True \n");		fprint $fileId ( "MachineLimit=" + 0 + "\n" );		fprint $fileId ("Blacklist= \n");		fprint $fileId ("LimitGroups= \n");		fprint $fileId ("JobDependencies= \n");		fprint $fileId ("OnJobComplete=Nothing \n");		fprint $fileId ("Frames=0-0 \n");		fprint $fileId ("ChunkSize=1 \n");		fclose $fileId;		return 1;	}	global proc int writejobinfofile(string $objectname)	{		string $path=`workspace -q -fn`;		string $submitFilename ="c:/temp/"+$objectname+"_info.job" ;		$fileId = `fopen $submitFilename "w"`;		if( $fileId == 0 )		{			error( "Error in Deadline Submission Script: could not create " + $submitFilename + "\n" );			return 0;		}		fprint $fileId ( "StartupDirectory=" + $path + "\n" );		fclose $fileId;		return 1;	}global proc GUI(){sysFile -md "c:/temp";string $cameras[]=`listCameras -p`;string $window = `window -title "ICE-Animations"  -w 200 -h 150 -mxb 0 MentalRayBaking`;	columnLayout -adjustableColumn true;			text -label "Mental Ray Baking Job Submission" -h 30 -bgc 0 0.572 1 -fn "fixedWidthFont";	setParent ..;	frameLayout -label " Job Description" -borderStyle "etchedIn" -labelVisible true -borderVisible true -collapsable false;		columnLayout -adj true -columnAttach "both" 4 -rowSpacing 4;					optionMenuGrp -label "Camera Name" -columnWidth 2 80 menucam;						for($item in $cameras)			{				menuItem -label $item;													}		setParent..;	setParent..;		frameLayout -label "Job Submission";		columnLayout -adj true -columnAttach "both" 4 -rowSpacing 4 buttonColumnLayout;			rowLayout -numberOfColumns 4 -cw4 120 120 120 120;				    button -label "Create"   -align "center" -width 110 -height 26 -c Baking;				    button -label "Close"   -align "center" -width 110 -height 26 -c close;			setParent..;		setParent..;	setParent..;showWindow $window;}